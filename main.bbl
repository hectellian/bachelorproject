% $ biblatex auxiliary file $
% $ biblatex bbl format version 3.2 $
% Do not modify the above lines!
%
% This is an auxiliary file used by the 'biblatex' package.
% This file may safely be deleted. It will be recreated by
% biber as required.
%
\begingroup
\makeatletter
\@ifundefined{ver@biblatex.sty}
  {\@latex@error
     {Missing 'biblatex' package}
     {The bibliography requires the 'biblatex' package.}
      \aftergroup\endinput}
  {}
\endgroup


\refsection{0}
  \datalist[entry]{nty/global//global/global}
    \entry{DocsMan1Man3}{misc}{}
      \field{sortinit}{D}
      \field{sortinithash}{6f385f66841fb5e82009dc833c761848}
      \field{labeltitlesource}{title}
      \field{howpublished}{https://www.openssl.org/docs/man1.1.1/man3/CRYPTO\_memcmp.html}
      \field{title}{/Docs/Man1.1.1/Man3/{{CRYPTO}}\_memcmp.Html}
      \field{urlday}{10}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/Y2T5IT62/CRYPTO_memcmp.html
      \endverb
    \endentry
    \entry{bar-elSorcererApprenticeGuide2004}{misc}{}
      \name{author}{5}{}{%
        {{hash=2d34a283f813fa0521fbaa288bd13e7e}{%
           family={{Bar-El}},
           familyi={B\bibinitperiod},
           given={Hagai},
           giveni={H\bibinitperiod}}}%
        {{hash=016f77bf3ed93f8aecdbfc246602b1c9}{%
           family={Choukri},
           familyi={C\bibinitperiod},
           given={Hamid},
           giveni={H\bibinitperiod}}}%
        {{hash=f3b449231e5742f32d4374cd29a1cb2e}{%
           family={Naccache},
           familyi={N\bibinitperiod},
           given={David},
           giveni={D\bibinitperiod}}}%
        {{hash=be82900df4d7d1240e25b3d2f1a0b10d}{%
           family={Tunstall},
           familyi={T\bibinitperiod},
           given={Michael},
           giveni={M\bibinitperiod}}}%
        {{hash=fed0272a4f6834ab950065b4c7fa3b4a}{%
           family={Whelan},
           familyi={W\bibinitperiod},
           given={Claire},
           giveni={C\bibinitperiod}}}%
      }
      \strng{namehash}{f96761fe45e28eaf14849e4f0db03c89}
      \strng{fullhash}{e1103695c0d38947edbe055fdb63a5cf}
      \strng{bibnamehash}{f96761fe45e28eaf14849e4f0db03c89}
      \strng{authorbibnamehash}{f96761fe45e28eaf14849e4f0db03c89}
      \strng{authornamehash}{f96761fe45e28eaf14849e4f0db03c89}
      \strng{authorfullhash}{e1103695c0d38947edbe055fdb63a5cf}
      \field{sortinit}{B}
      \field{sortinithash}{d7095fff47cda75ca2589920aae98399}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The effect of faults on electronic systems has been studied since the 1970s when it was noticed that radioactive particles caused errors in chips. This led to further research on the effect of charged particles on silicon, motivated by the aerospace industry who was becoming concerned about the effect of faults in airborn electronic systems. Since then various mechanisms for fault creation and propagation have been discovered and researched. This paper covers the various methods that can be used to induce faults in semiconductors and exploit such errors maliciously. Several examples of attacks stemming from the exploiting of faults are explained. Finally a series of countermeasures to thwart these attacks are described.}
      \field{annotation}{Publication info: Published elsewhere. Unknown where it was published}
      \field{number}{2004/100}
      \field{title}{The {{Sorcerer}}'s {{Apprentice Guide}} to {{Fault Attacks}}}
      \field{urlday}{17}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2004}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/QYX38U7P/Bar-El et al. - 2004 - The Sorcererâ€™s Apprentice Guide to Fault Attacks.pdf
      \endverb
    \endentry
    \entry{bittnerForgottenThreatVoltage2021}{misc}{}
      \name{author}{4}{}{%
        {{hash=a5b3e039a8b9931ad3dcc2d7766587bc}{%
           family={Bittner},
           familyi={B\bibinitperiod},
           given={Otto},
           giveni={O\bibinitperiod}}}%
        {{hash=9d8b04f6db6d1ef1da6e8a58cab7bff6}{%
           family={Krachenfels},
           familyi={K\bibinitperiod},
           given={Thilo},
           giveni={T\bibinitperiod}}}%
        {{hash=c50f1c514bd14e11fdc6da4439b7b891}{%
           family={Galauner},
           familyi={G\bibinitperiod},
           given={Andreas},
           giveni={A\bibinitperiod}}}%
        {{hash=ed83c5ceed1edd0dbc3cc610adf79477}{%
           family={Seifert},
           familyi={S\bibinitperiod},
           given={Jean-Pierre},
           giveni={J\bibinithyphendelim P\bibinitperiod}}}%
      }
      \list{publisher}{1}{%
        {arXiv}%
      }
      \strng{namehash}{819a74e8f212bbd0f4601a9023736b68}
      \strng{fullhash}{06ba9904df1408f8c8ff6b75af5d4bc1}
      \strng{bibnamehash}{819a74e8f212bbd0f4601a9023736b68}
      \strng{authorbibnamehash}{819a74e8f212bbd0f4601a9023736b68}
      \strng{authornamehash}{819a74e8f212bbd0f4601a9023736b68}
      \strng{authorfullhash}{06ba9904df1408f8c8ff6b75af5d4bc1}
      \field{sortinit}{B}
      \field{sortinithash}{d7095fff47cda75ca2589920aae98399}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{shorttitle}
      \field{abstract}{Voltage fault injection (FI) is a well-known attack technique that can be used to force faulty behavior in processors during their operation. Glitching the supply voltage can cause data value corruption, skip security checks, or enable protected code paths. At the same time, modern systems on a chip (SoCs) are used in security-critical applications, such as self-driving cars and autonomous machines. Since these embedded devices are often physically accessible by attackers, vendors must consider device tampering in their threat models. However, while the threat of voltage FI is known since the early 2000s, it seems as if vendors still forget to integrate countermeasures. This work shows how the entire boot security of an Nvidia SoC, used in Tesla's autopilot and Mercedes-Benz's infotainment system, can be circumvented using voltage FI. We uncover a hidden bootloader that is only available to the manufacturer for testing purposes and disabled by fuses in shipped products. We demonstrate how to re-enable this bootloader using FI to gain code execution with the highest privileges, enabling us to extract the bootloader's firmware and decryption keys used in later boot stages. Using a hardware implant, an adversary might misuse the hidden bootloader to bypass trusted code execution even during the system's regular operation.}
      \field{eprintclass}{cs}
      \field{eprinttype}{arxiv}
      \field{month}{8}
      \field{number}{arXiv:2108.06131}
      \field{shorttitle}{The {{Forgotten Threat}} of {{Voltage Glitching}}}
      \field{title}{The {{Forgotten Threat}} of {{Voltage Glitching}}: {{A Case Study}} on {{Nvidia Tegra X2 SoCs}}}
      \field{urlday}{15}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2021}
      \field{urldateera}{ce}
      \verb{eprint}
      \verb 2108.06131
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/FASQWYH4/Bittner et al. - 2021 - The Forgotten Threat of Voltage Glitching A Case .pdf;/home/hectellian/Zotero/storage/2VGNE92W/2108.html
      \endverb
      \keyw{Computer Science - Cryptography and Security}
    \endentry
    \entry{burkeIntelUnleashesComprehensive}{misc}{}
      \name{author}{1}{}{%
        {{hash=1649aa5fabba9d42d41ddef2c6593c7c}{%
           family={Burke},
           familyi={B\bibinitperiod},
           given={Steven},
           giveni={S\bibinitperiod}}}%
      }
      \strng{namehash}{1649aa5fabba9d42d41ddef2c6593c7c}
      \strng{fullhash}{1649aa5fabba9d42d41ddef2c6593c7c}
      \strng{bibnamehash}{1649aa5fabba9d42d41ddef2c6593c7c}
      \strng{authorbibnamehash}{1649aa5fabba9d42d41ddef2c6593c7c}
      \strng{authornamehash}{1649aa5fabba9d42d41ddef2c6593c7c}
      \strng{authorfullhash}{1649aa5fabba9d42d41ddef2c6593c7c}
      \field{sortinit}{B}
      \field{sortinithash}{d7095fff47cda75ca2589920aae98399}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Intel says it is 'rapidly issuing' updates for all types of Intel-based computer systems -- including personal computers and servers -- that render those systems 'immune' from the Spectre and Meltdown security exploits.}
      \field{howpublished}{https://www.crn.com/news/security/300097426/intel-unleashes-comprehensive-threat-mitigation-response-to-spectre-and-meltdown-security-vulnerabilities}
      \field{langid}{english}
      \field{title}{Intel {{Unleashes}} '{{Comprehensive}}' {{Threat Mitigation Response To Spectre And Meltdown Security Vulnerabilities}} {|} {{CRN}}}
      \field{urlday}{10}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/K72XJIR3/intel-unleashes-comprehensive-threat-mitigation-response-to-spectre-and-meltdown-security-vulne.html
      \endverb
    \endentry
    \entry{computersecuritydivisionPostQuantumCryptographyCSRC2017}{misc}{}
      \name{author}{1}{}{%
        {{hash=708a46dab973085795f02e0ba48e4141}{%
           family={Computer\bibnamedelimb Security\bibnamedelima Division},
           familyi={C\bibinitperiod\bibinitdelim S\bibinitperiod\bibinitdelim D\bibinitperiod},
           given={Information\bibnamedelimb Technology\bibnamedelima Laboratory},
           giveni={I\bibinitperiod\bibinitdelim T\bibinitperiod\bibinitdelim L\bibinitperiod}}}%
      }
      \strng{namehash}{708a46dab973085795f02e0ba48e4141}
      \strng{fullhash}{708a46dab973085795f02e0ba48e4141}
      \strng{bibnamehash}{708a46dab973085795f02e0ba48e4141}
      \strng{authorbibnamehash}{708a46dab973085795f02e0ba48e4141}
      \strng{authornamehash}{708a46dab973085795f02e0ba48e4141}
      \strng{authorfullhash}{708a46dab973085795f02e0ba48e4141}
      \field{sortinit}{C}
      \field{sortinithash}{4d103a86280481745c9c897c925753c0}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Public comments are available for~Draft FIPS 203, Draft FIPS 204 and Draft FIPS 205, which specify algorithms derived from CRYSTALS-Dilithium, CRYSTALS-KYBER and SPHINCS+.~ The public comment period closed November 22, 2023. PQC Seminars Next Talk:~ April 23, 2024 4th Round KEMs ~ Additional Digital Signature Schemes -~Round 1 Submissions PQC License Summary \& Excerpts Background NIST initiated a process to solicit, evaluate, and standardize one or more quantum-resistant public-key cryptographic algorithms.~~Full details can be found in the Post-Quantum Cryptography Standardization page.~~ In recent years, there has been a substantial amount of research on quantum computers -- machines that exploit quantum mechanical phenomena to solve mathematical problems that are difficult or intractable for conventional computers. If large-scale quantum computers are ever built, they will be able to break many of the public-key cryptosystems currently in use. This would seriously compromise the confidentiality and...}
      \field{howpublished}{https://csrc.nist.gov/projects/post-quantum-cryptography}
      \field{journaltitle}{CSRC {|} NIST}
      \field{langid}{american}
      \field{month}{1}
      \field{title}{Post-{{Quantum Cryptography}} {|} {{CSRC}} {|} {{CSRC}}}
      \field{urlday}{10}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2017}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/AH8CEIBL/post-quantum-cryptography.html
      \endverb
    \endentry
    \entry{costanIntelSGXExplained2016}{misc}{}
      \name{author}{2}{}{%
        {{hash=51a352c7306910a4bef62e293e6097ea}{%
           family={Costan},
           familyi={C\bibinitperiod},
           given={Victor},
           giveni={V\bibinitperiod}}}%
        {{hash=4be4060700fa73556250f6feefb96f46}{%
           family={Devadas},
           familyi={D\bibinitperiod},
           given={Srinivas},
           giveni={S\bibinitperiod}}}%
      }
      \strng{namehash}{2561c882479f6a08aa24884302f4fef3}
      \strng{fullhash}{2561c882479f6a08aa24884302f4fef3}
      \strng{bibnamehash}{2561c882479f6a08aa24884302f4fef3}
      \strng{authorbibnamehash}{2561c882479f6a08aa24884302f4fef3}
      \strng{authornamehash}{2561c882479f6a08aa24884302f4fef3}
      \strng{authorfullhash}{2561c882479f6a08aa24884302f4fef3}
      \field{sortinit}{C}
      \field{sortinithash}{4d103a86280481745c9c897c925753c0}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Intel's Software Guard Extensions (SGX) is a set of extensions to the Intel architecture that aims to provide integrity and privacy guarantees to security-sensitive computation performed on a computer where all the privileged software (kernel, hypervisor, etc) is potentially malicious. This paper analyzes Intel SGX, based on the 3 papers that introduced it, on the Intel Software Developer's Manual (which supersedes the SGX manuals), on an ISCA 2015 tutorial, and on two patents. We use the papers, reference manuals, and tutorial as primary data sources, and only draw on the patents to fill in missing information. This paper's contributions are a summary of the Intel-specific architectural and micro-architectural details needed to understand SGX, a detailed and structured presentation of the publicly available information on SGX, a series of intelligent guesses about some important but undocumented aspects of SGX, and an analysis of SGX's security properties.}
      \field{annotation}{Publication info: Preprint.}
      \field{number}{2016/086}
      \field{title}{Intel {{SGX Explained}}}
      \field{urlday}{10}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2016}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/85WE3K2F/Costan and Devadas - 2016 - Intel SGX Explained.pdf
      \endverb
    \endentry
    \entry{DigitalRightsManagement2024}{article}{}
      \field{sortinit}{D}
      \field{sortinithash}{6f385f66841fb5e82009dc833c761848}
      \field{labeltitlesource}{title}
      \field{abstract}{Digital rights management (DRM) is the management of legal access to digital content. Various tools or technological protection measures (TPM), such as access control technologies, can restrict the use of proprietary hardware and copyrighted works. DRM technologies govern the use, modification and distribution of copyrighted works (e.g. software, multimedia content) and of systems that enforce these policies within devices. DRM technologies include licensing agreements and encryption.Laws in many countries criminalize the circumvention of DRM, communication about such circumvention, and the creation and distribution of tools used for such circumvention. Such laws are part of the United States' Digital Millennium Copyright Act (DMCA), and the European Union's Information Society Directive -- with the French DADVSI an example of a member state of the European Union implementing that directive.Copyright holders argue that DRM technologies are necessary to protect intellectual property, just as physical locks prevent personal property from theft. For examples, they can help the copyright holders for maintaining artistic controls, and supporting licenses' modalities such as rentals. Industrial users (i.e. industries) have expanded the use of DRM technologies to various hardware products, such as Keurig's coffeemakers, Philips' light bulbs, mobile device power chargers, and John Deere's tractors. For instance, tractor companies try to prevent farmers from making repairs via DRM.DRM is controversial. There is an absence of evidence about the DRM capability in preventing copyright infringement, some complaints by legitimate customers for caused inconveniences, and a suspicion of stifling innovation and competition. Furthermore, works can become permanently inaccessible if the DRM scheme changes or if a required service is discontinued. DRM technologies have been criticized for restricting individuals from copying or using the content legally, such as by fair use or by making backup copies. DRM is in common use by the entertainment industry (e.g., audio and video publishers). Many online stores such as OverDrive use DRM technologies, as do cable and satellite service operators. Apple removed DRM technology from iTunes around 2009. Typical DRM also prevents lending materials out through a library, or accessing works in the public domain.}
      \field{annotation}{Page Version ID: 1215486134}
      \field{journaltitle}{Wikipedia}
      \field{langid}{english}
      \field{month}{3}
      \field{title}{Digital Rights Management}
      \field{urlday}{15}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2024}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/5TNGINKK/Digital_rights_management.html
      \endverb
    \endentry
    \entry{gentryFULLYHOMOMORPHICENCRYPTION}{article}{}
      \name{author}{1}{}{%
        {{hash=bd007b2a3d698c39bd758b253f7c2ebf}{%
           family={Gentry},
           familyi={G\bibinitperiod},
           given={Craig},
           giveni={C\bibinitperiod}}}%
      }
      \strng{namehash}{bd007b2a3d698c39bd758b253f7c2ebf}
      \strng{fullhash}{bd007b2a3d698c39bd758b253f7c2ebf}
      \strng{bibnamehash}{bd007b2a3d698c39bd758b253f7c2ebf}
      \strng{authorbibnamehash}{bd007b2a3d698c39bd758b253f7c2ebf}
      \strng{authornamehash}{bd007b2a3d698c39bd758b253f7c2ebf}
      \strng{authorfullhash}{bd007b2a3d698c39bd758b253f7c2ebf}
      \field{sortinit}{G}
      \field{sortinithash}{32d67eca0634bf53703493fb1090a2e8}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{langid}{english}
      \field{title}{A {{FULLY HOMOMORPHIC ENCRYPTION SCHEME}}}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/3KDQ9NB8/Gentry - A FULLY HOMOMORPHIC ENCRYPTION SCHEME.pdf
      \endverb
    \endentry
    \entry{GrapheneStrongLightweight}{misc}{}
      \field{sortinit}{G}
      \field{sortinithash}{32d67eca0634bf53703493fb1090a2e8}
      \field{labeltitlesource}{title}
      \field{howpublished}{https://ieeexplore.ieee.org/abstract/document/9251863}
      \field{title}{Graphene: {{Strong}} yet {{Lightweight Row Hammer Protection}} {|} {{IEEE Conference Publication}} {|} {{IEEE Xplore}}}
      \field{urlday}{17}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/2KCGY57H/9251863.html
      \endverb
    \endentry
    \entry{haldermanLestWeRemember2009}{article}{}
      \name{author}{9}{}{%
        {{hash=6cba604de51e7ad2b27a90bc7f4ce019}{%
           family={Halderman},
           familyi={H\bibinitperiod},
           given={J.\bibnamedelimi Alex},
           giveni={J\bibinitperiod\bibinitdelim A\bibinitperiod}}}%
        {{hash=5d3f156944c56840b0318b38b5836169}{%
           family={Schoen},
           familyi={S\bibinitperiod},
           given={Seth\bibnamedelima D.},
           giveni={S\bibinitperiod\bibinitdelim D\bibinitperiod}}}%
        {{hash=3ad83fecd0fa965b650e3af91800c5bd}{%
           family={Heninger},
           familyi={H\bibinitperiod},
           given={Nadia},
           giveni={N\bibinitperiod}}}%
        {{hash=622a70caf17905ede3c3b68935e6889e}{%
           family={Clarkson},
           familyi={C\bibinitperiod},
           given={William},
           giveni={W\bibinitperiod}}}%
        {{hash=88c7f6c0c33dc4d9d14f34d0e2cf1282}{%
           family={Paul},
           familyi={P\bibinitperiod},
           given={William},
           giveni={W\bibinitperiod}}}%
        {{hash=15e13c554094a001f2bc5aef0c6fdb98}{%
           family={Calandrino},
           familyi={C\bibinitperiod},
           given={Joseph\bibnamedelima A.},
           giveni={J\bibinitperiod\bibinitdelim A\bibinitperiod}}}%
        {{hash=d5b7fbf06aa04cd980382f3766e04df9}{%
           family={Feldman},
           familyi={F\bibinitperiod},
           given={Ariel\bibnamedelima J.},
           giveni={A\bibinitperiod\bibinitdelim J\bibinitperiod}}}%
        {{hash=8a9cbff7a0b253dce6decc51b883540b}{%
           family={Appelbaum},
           familyi={A\bibinitperiod},
           given={Jacob},
           giveni={J\bibinitperiod}}}%
        {{hash=1527a830397c4e7dfb4604830ab3ae90}{%
           family={Felten},
           familyi={F\bibinitperiod},
           given={Edward\bibnamedelima W.},
           giveni={E\bibinitperiod\bibinitdelim W\bibinitperiod}}}%
      }
      \strng{namehash}{01e77bff812c424a430b8e3130772fd0}
      \strng{fullhash}{c13e35b6cb520d115637bd8c81c43418}
      \strng{bibnamehash}{01e77bff812c424a430b8e3130772fd0}
      \strng{authorbibnamehash}{01e77bff812c424a430b8e3130772fd0}
      \strng{authornamehash}{01e77bff812c424a430b8e3130772fd0}
      \strng{authorfullhash}{c13e35b6cb520d115637bd8c81c43418}
      \field{sortinit}{H}
      \field{sortinithash}{23a3aa7c24e56cfa16945d55545109b5}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{shorttitle}
      \field{abstract}{Contrary to popular assumption, DRAMs used in most modern computers retain their contents for several seconds after power is lost, even at room temperature and even if removed from a motherboard. Although DRAMs become less reliable when they are not refreshed, they are not immediately erased, and their contents persist sufficiently for malicious (or forensic) acquisition of usable full-system memory images. We show that this phenomenon limits the ability of an operating system to protect cryptographic key material from an attacker with physical access. We use cold reboots to mount successful attacks on popular disk encryption systems using no special devices or materials. We experimentally characterize the extent and predictability of memory remanence and report that remanence times can be increased dramatically with simple cooling techniques. We offer new algorithms for finding cryptographic keys in memory images and for correcting errors caused by bit decay. Though we discuss several strategies for partially mitigating these risks, we know of no simple remedy that would eliminate them.}
      \field{issn}{0001-0782, 1557-7317}
      \field{journaltitle}{Communications of the ACM}
      \field{langid}{english}
      \field{month}{5}
      \field{number}{5}
      \field{shorttitle}{Lest We Remember}
      \field{title}{Lest We Remember: Cold-Boot Attacks on Encryption Keys}
      \field{urlday}{10}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{volume}{52}
      \field{year}{2009}
      \field{urldateera}{ce}
      \field{pages}{91\bibrangedash 98}
      \range{pages}{8}
      \verb{doi}
      \verb 10.1145/1506409.1506429
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/RHQLX6FQ/Halderman et al. - 2009 - Lest we remember cold-boot attacks on encryption .pdf
      \endverb
    \endentry
    \entry{kavandSecuringHardwareReconfigurable2022}{inproceedings}{}
      \name{author}{4}{}{%
        {{hash=2a9840d359dff334bdb91ce59645f871}{%
           family={Kavand},
           familyi={K\bibinitperiod},
           given={Nima},
           giveni={N\bibinitperiod}}}%
        {{hash=c01f58aa2ef9ef0d6f39b9f9f63f6e50}{%
           family={Darjani},
           familyi={D\bibinitperiod},
           given={Armin},
           giveni={A\bibinitperiod}}}%
        {{hash=d28e14f639d1d820d2b392dba8bb1255}{%
           family={Rai},
           familyi={R\bibinitperiod},
           given={Shubham},
           giveni={S\bibinitperiod}}}%
        {{hash=5ce182e577e758d1a27cb7fb6095f1ec}{%
           family={Kumar},
           familyi={K\bibinitperiod},
           given={Akash},
           giveni={A\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {New York, NY, USA}%
      }
      \list{publisher}{1}{%
        {Association for Computing Machinery}%
      }
      \strng{namehash}{a134fe215cc438c6f9cfbee0d6aa49b2}
      \strng{fullhash}{2360e458fbee48c19fdaa4b1d62c95c4}
      \strng{bibnamehash}{a134fe215cc438c6f9cfbee0d6aa49b2}
      \strng{authorbibnamehash}{a134fe215cc438c6f9cfbee0d6aa49b2}
      \strng{authornamehash}{a134fe215cc438c6f9cfbee0d6aa49b2}
      \strng{authorfullhash}{2360e458fbee48c19fdaa4b1d62c95c4}
      \field{sortinit}{K}
      \field{sortinithash}{c02bf6bff1c488450c352b40f5d853ab}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Hardware security has been an ever-growing concern of the integrated circuit (IC) designers. Through different stages in the IC design and life cycle, an adversary can extract sensitive design information and private data stored in the circuit using logical, physical, and structural weaknesses. Besides, in recent times, ML-based attacks have become the new de facto standard in hardware security community. Contemporary defense strategies are often facing unforeseen challenges to cope up with these attack schemes. Additionally, the high overhead of the CMOS-based secure addon circuitry and intrinsic limitations of these devices indicate the need for new nano-electronics. Emerging reconfigurable devices like Reconfigurable Field Effect transistors (RFETs) provide unique features to fortify the design against various threats at different stages in the IC design and life cycle. In this manuscript, we investigate the applications of the RFETs for securing the design against traditional and machine learning (ML)-based intellectual property (IP) piracy techniques and side-channel attacks (SCAs).}
      \field{booktitle}{Proceedings of the 41st {{IEEE}}/{{ACM International Conference}} on {{Computer-Aided Design}}}
      \field{isbn}{978-1-4503-9217-4}
      \field{month}{12}
      \field{series}{{{ICCAD}} '22}
      \field{title}{Securing {{Hardware}} through {{Reconfigurable Nano-Structures}}}
      \field{urlday}{17}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2022}
      \field{urldateera}{ce}
      \field{pages}{1\bibrangedash 7}
      \range{pages}{7}
      \verb{doi}
      \verb 10.1145/3508352.3561116
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/3LBRJKFF/Kavand et al. - 2022 - Securing Hardware through Reconfigurable Nano-Stru.pdf
      \endverb
      \keyw{HW security,IP protection,reconigurable nano-structures,RFET,side-channel attacks}
    \endentry
    \entry{kentEncyclopediaComputerScience1993}{book}{}
      \name{author}{2}{}{%
        {{hash=1e53ad98d92c1ecaaacecd7931163c5d}{%
           family={Kent},
           familyi={K\bibinitperiod},
           given={Allen},
           giveni={A\bibinitperiod}}}%
        {{hash=b96163b60e610b12c3e00e9412c85e65}{%
           family={Williams},
           familyi={W\bibinitperiod},
           given={James\bibnamedelima G.},
           giveni={J\bibinitperiod\bibinitdelim G\bibinitperiod}}}%
      }
      \list{publisher}{1}{%
        {CRC Press}%
      }
      \strng{namehash}{4f8fe84a94cad9af337a58d93e3e0900}
      \strng{fullhash}{4f8fe84a94cad9af337a58d93e3e0900}
      \strng{bibnamehash}{4f8fe84a94cad9af337a58d93e3e0900}
      \strng{authorbibnamehash}{4f8fe84a94cad9af337a58d93e3e0900}
      \strng{authornamehash}{4f8fe84a94cad9af337a58d93e3e0900}
      \strng{authorfullhash}{4f8fe84a94cad9af337a58d93e3e0900}
      \field{sortinit}{K}
      \field{sortinithash}{c02bf6bff1c488450c352b40f5d853ab}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{shorttitle}
      \field{abstract}{"This comprehensive reference work provides immediate, fingertip access to state-of-the-art technology in nearly 700 self-contained articles written by over 900 international authorities. Each article in the Encyclopedia features current developments and trends in computers, software, vendors, and applications...extensive bibliographies of leading figures in the field, such as Samuel Alexander, John von Neumann, and Norbert Wiener...and in-depth analysis of future directions."}
      \field{isbn}{978-0-8247-2281-4}
      \field{langid}{english}
      \field{month}{4}
      \field{shorttitle}{Encyclopedia of {{Computer Science}} and {{Technology}}}
      \field{title}{Encyclopedia of {{Computer Science}} and {{Technology}}: {{Volume}} 28 - {{Supplement}} 13: {{AerosPate Applications}} of {{Artificial Intelligence}} to {{Tree Structures}}}
      \field{year}{1993}
      \keyw{Computers / Computer Science,Computers / General}
    \endentry
    \entry{kimFlippingBitsMemory2014}{inproceedings}{}
      \name{author}{9}{}{%
        {{hash=966fca207a45279253ffe318466a22ec}{%
           family={Kim},
           familyi={K\bibinitperiod},
           given={Yoongu},
           giveni={Y\bibinitperiod}}}%
        {{hash=67a626b7b72f85b44fec0df04ae46fbc}{%
           family={Daly},
           familyi={D\bibinitperiod},
           given={Ross},
           giveni={R\bibinitperiod}}}%
        {{hash=a0cc45f995f7986a43080fa9f2963907}{%
           family={Kim},
           familyi={K\bibinitperiod},
           given={Jeremie},
           giveni={J\bibinitperiod}}}%
        {{hash=9d3f717381cc3f1c9e8f6a9056bd5d42}{%
           family={Fallin},
           familyi={F\bibinitperiod},
           given={Chris},
           giveni={C\bibinitperiod}}}%
        {{hash=29becbbd2929ef8d82d13b07dc911db5}{%
           family={Lee},
           familyi={L\bibinitperiod},
           given={Ji\bibnamedelima Hye},
           giveni={J\bibinitperiod\bibinitdelim H\bibinitperiod}}}%
        {{hash=4a18172d750fd3cd293dc5ad6d47e26d}{%
           family={Lee},
           familyi={L\bibinitperiod},
           given={Donghyuk},
           giveni={D\bibinitperiod}}}%
        {{hash=e0af57e51122fbbea1a603c21d57d117}{%
           family={Wilkerson},
           familyi={W\bibinitperiod},
           given={Chris},
           giveni={C\bibinitperiod}}}%
        {{hash=074cde51a171cd2c7c326eae20cdbff2}{%
           family={Lai},
           familyi={L\bibinitperiod},
           given={Konrad},
           giveni={K\bibinitperiod}}}%
        {{hash=5c37647ea7ea3d969c75fa814163e18f}{%
           family={Mutlu},
           familyi={M\bibinitperiod},
           given={Onur},
           giveni={O\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {Minneapolis, MN, USA}%
      }
      \list{publisher}{1}{%
        {IEEE}%
      }
      \strng{namehash}{fb74d1d536112a572e59a323a83c6017}
      \strng{fullhash}{bb0adfac7d5e3d7c19a9deb107304534}
      \strng{bibnamehash}{fb74d1d536112a572e59a323a83c6017}
      \strng{authorbibnamehash}{fb74d1d536112a572e59a323a83c6017}
      \strng{authornamehash}{fb74d1d536112a572e59a323a83c6017}
      \strng{authorfullhash}{bb0adfac7d5e3d7c19a9deb107304534}
      \field{sortinit}{K}
      \field{sortinithash}{c02bf6bff1c488450c352b40f5d853ab}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{shorttitle}
      \field{abstract}{Memory isolation is a key property of a reliable and secure computing system --- an access to one memory address should not have unintended side effects on data stored in other addresses. However, as DRAM process technology scales down to smaller dimensions, it becomes more difficult to prevent DRAM cells from electrically interacting with each other. In this paper, we expose the vulnerability of commodity DRAM chips to disturbance errors. By reading from the same address in DRAM, we show that it is possible to corrupt data in nearby addresses. More specifically, activating the same row in DRAM corrupts data in nearby rows. We demonstrate this phenomenon on Intel and AMD systems using a malicious program that generates many DRAM accesses. We induce errors in most DRAM modules (110 out of 129) from three major DRAM manufacturers. From this we conclude that many deployed systems are likely to be at risk. We identify the root cause of disturbance errors as the repeated toggling of a DRAM row's wordline, which stresses inter-cell coupling effects that accelerate charge leakage from nearby rows. We provide an extensive characterization study of disturbance errors and their behavior using an FPGA-based testing platform. Among our key findings, we show that (i) it takes as few as 139K accesses to induce an error and (ii) up to one in every 1.7K cells is susceptible to errors. After examining various potential ways of addressing the problem, we propose a low-overhead solution to prevent the errors.}
      \field{booktitle}{2014 {{ACM}}/{{IEEE}} 41st {{International Symposium}} on {{Computer Architecture}} ({{ISCA}})}
      \field{isbn}{978-1-4799-4394-4 978-1-4799-4396-8}
      \field{langid}{english}
      \field{month}{6}
      \field{shorttitle}{Flipping Bits in Memory without Accessing Them}
      \field{title}{Flipping Bits in Memory without Accessing Them: {{An}} Experimental Study of {{DRAM}} Disturbance Errors}
      \field{urlday}{10}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2014}
      \field{urldateera}{ce}
      \field{pages}{361\bibrangedash 372}
      \range{pages}{12}
      \verb{doi}
      \verb 10.1109/ISCA.2014.6853210
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/3DFAG8LF/Kim et al. - 2014 - Flipping bits in memory without accessing them An.pdf
      \endverb
    \endentry
    \entry{kocherDifferentialPowerAnalysis1999}{inproceedings}{}
      \name{author}{3}{}{%
        {{hash=f0a163cdbf4dbde1c36f8457b3e2278e}{%
           family={Kocher},
           familyi={K\bibinitperiod},
           given={Paul},
           giveni={P\bibinitperiod}}}%
        {{hash=452e8e6a857cdafce4ff896fe410fbf1}{%
           family={Jaffe},
           familyi={J\bibinitperiod},
           given={Joshua},
           giveni={J\bibinitperiod}}}%
        {{hash=282b66bdaa90f6abf07947e407f1d736}{%
           family={Jun},
           familyi={J\bibinitperiod},
           given={Benjamin},
           giveni={B\bibinitperiod}}}%
      }
      \name{editor}{1}{}{%
        {{hash=401da10ec1e32e7e0a96cb7182f66f95}{%
           family={Wiener},
           familyi={W\bibinitperiod},
           given={Michael},
           giveni={M\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {Berlin, Heidelberg}%
      }
      \list{publisher}{1}{%
        {Springer}%
      }
      \strng{namehash}{722ec14d03dfa9727cc012eea2659567}
      \strng{fullhash}{722ec14d03dfa9727cc012eea2659567}
      \strng{bibnamehash}{722ec14d03dfa9727cc012eea2659567}
      \strng{authorbibnamehash}{722ec14d03dfa9727cc012eea2659567}
      \strng{authornamehash}{722ec14d03dfa9727cc012eea2659567}
      \strng{authorfullhash}{722ec14d03dfa9727cc012eea2659567}
      \strng{editorbibnamehash}{401da10ec1e32e7e0a96cb7182f66f95}
      \strng{editornamehash}{401da10ec1e32e7e0a96cb7182f66f95}
      \strng{editorfullhash}{401da10ec1e32e7e0a96cb7182f66f95}
      \field{sortinit}{K}
      \field{sortinithash}{c02bf6bff1c488450c352b40f5d853ab}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Cryptosystem designers frequently assume that secrets will be manipulated in closed, reliable computing environments. Unfortunately, actual computers and microchips leak information about the operations they process. This paper examines specific methods for analyzing power consumption measurements to find secret keys from tamper resistant devices. We also discuss approaches for building cryptosystems that can operate securely in existing hardware that leaks information.}
      \field{booktitle}{Advances in {{Cryptology}} --- {{CRYPTO}}' 99}
      \field{isbn}{978-3-540-48405-9}
      \field{langid}{english}
      \field{title}{Differential {{Power Analysis}}}
      \field{year}{1999}
      \field{pages}{388\bibrangedash 397}
      \range{pages}{10}
      \verb{doi}
      \verb 10.1007/3-540-48405-1_25
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/5HUIBN26/Kocher et al. - 1999 - Differential Power Analysis.pdf
      \endverb
      \keyw{cryptanalysis,DES,differential power analysis,DPA,SPA}
    \endentry
    \entry{kocherSpectreAttacksExploiting2018}{misc}{}
      \name{author}{10}{}{%
        {{hash=f0a163cdbf4dbde1c36f8457b3e2278e}{%
           family={Kocher},
           familyi={K\bibinitperiod},
           given={Paul},
           giveni={P\bibinitperiod}}}%
        {{hash=9b8ddec78ab1bf52f758858ca3928a61}{%
           family={Genkin},
           familyi={G\bibinitperiod},
           given={Daniel},
           giveni={D\bibinitperiod}}}%
        {{hash=674bea57e03671a89cb3f84cad730696}{%
           family={Gruss},
           familyi={G\bibinitperiod},
           given={Daniel},
           giveni={D\bibinitperiod}}}%
        {{hash=90745f0bee3dd32447e37472dbab6c41}{%
           family={Haas},
           familyi={H\bibinitperiod},
           given={Werner},
           giveni={W\bibinitperiod}}}%
        {{hash=d9528fb2869236a3c4d978220eded42c}{%
           family={Hamburg},
           familyi={H\bibinitperiod},
           given={Mike},
           giveni={M\bibinitperiod}}}%
        {{hash=06dadd3dad2de585a3fce14dd5e8f779}{%
           family={Lipp},
           familyi={L\bibinitperiod},
           given={Moritz},
           giveni={M\bibinitperiod}}}%
        {{hash=1cdffbc482347edefd718f61814abbc3}{%
           family={Mangard},
           familyi={M\bibinitperiod},
           given={Stefan},
           giveni={S\bibinitperiod}}}%
        {{hash=b38d2f646061589c79aab7b15fec7827}{%
           family={Prescher},
           familyi={P\bibinitperiod},
           given={Thomas},
           giveni={T\bibinitperiod}}}%
        {{hash=463f3d270ca422b7f257c887efd3eed8}{%
           family={Schwarz},
           familyi={S\bibinitperiod},
           given={Michael},
           giveni={M\bibinitperiod}}}%
        {{hash=cd7579fd1f745b58396f5395d38e1a5c}{%
           family={Yarom},
           familyi={Y\bibinitperiod},
           given={Yuval},
           giveni={Y\bibinitperiod}}}%
      }
      \strng{namehash}{3c1b558b10a44e8a4ecc1e0e195af826}
      \strng{fullhash}{4e8d803e7f58f6ce37d6681b44ae274b}
      \strng{bibnamehash}{3c1b558b10a44e8a4ecc1e0e195af826}
      \strng{authorbibnamehash}{3c1b558b10a44e8a4ecc1e0e195af826}
      \strng{authornamehash}{3c1b558b10a44e8a4ecc1e0e195af826}
      \strng{authorfullhash}{4e8d803e7f58f6ce37d6681b44ae274b}
      \field{sortinit}{K}
      \field{sortinithash}{c02bf6bff1c488450c352b40f5d853ab}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{shorttitle}
      \field{abstract}{Modern processors use branch prediction and speculative execution to maximize performance. For example, if the destination of a branch depends on a memory value that is in the process of being read, CPUs will try guess the destination and attempt to execute ahead. When the memory value finally arrives, the CPU either discards or commits the speculative computation. Speculative logic is unfaithful in how it executes, can access to the victim's memory and registers, and can perform operations with measurable side effects. Spectre attacks involve inducing a victim to speculatively perform operations that would not occur during correct program execution and which leak the victim's confidential information via a side channel to the adversary. This paper describes practical attacks that combine methodology from side channel attacks, fault attacks, and return-oriented programming that can read arbitrary memory from the victim's process. More broadly, the paper shows that speculative execution implementations violate the security assumptions underpinning numerous software security mechanisms, including operating system process separation, static analysis, containerization, just-in-time (JIT) compilation, and countermeasures to cache timing/side-channel attacks. These attacks represent a serious threat to actual systems, since vulnerable speculative execution capabilities are found in microprocessors from Intel, AMD, and ARM that are used in billions of devices. While makeshift processor-specific countermeasures are possible in some cases, sound solutions will require fixes to processor designs as well as updates to instruction set architectures (ISAs) to give hardware architects and software developers a common understanding as to what computation state CPU implementations are (and are not) permitted to leak.}
      \field{howpublished}{https://arxiv.org/abs/1801.01203v1}
      \field{journaltitle}{arXiv.org}
      \field{langid}{english}
      \field{month}{1}
      \field{shorttitle}{Spectre {{Attacks}}}
      \field{title}{Spectre {{Attacks}}: {{Exploiting Speculative Execution}}}
      \field{urlday}{7}
      \field{urlmonth}{3}
      \field{urlyear}{2024}
      \field{year}{2018}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/8LSQ7BNN/Kocher et al. - 2018 - Spectre Attacks Exploiting Speculative Execution.pdf
      \endverb
    \endentry
    \entry{kocherTimingAttacksImplementations1996}{inproceedings}{}
      \name{author}{1}{}{%
        {{hash=8f09a31e1d70f24e7b4000739c4f9ee2}{%
           family={Kocher},
           familyi={K\bibinitperiod},
           given={Paul\bibnamedelima C.},
           giveni={P\bibinitperiod\bibinitdelim C\bibinitperiod}}}%
      }
      \name{editor}{1}{}{%
        {{hash=57af579700a7f1b95505caa26ac99651}{%
           family={Koblitz},
           familyi={K\bibinitperiod},
           given={Neal},
           giveni={N\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {Berlin, Heidelberg}%
      }
      \list{publisher}{1}{%
        {Springer}%
      }
      \strng{namehash}{8f09a31e1d70f24e7b4000739c4f9ee2}
      \strng{fullhash}{8f09a31e1d70f24e7b4000739c4f9ee2}
      \strng{bibnamehash}{8f09a31e1d70f24e7b4000739c4f9ee2}
      \strng{authorbibnamehash}{8f09a31e1d70f24e7b4000739c4f9ee2}
      \strng{authornamehash}{8f09a31e1d70f24e7b4000739c4f9ee2}
      \strng{authorfullhash}{8f09a31e1d70f24e7b4000739c4f9ee2}
      \strng{editorbibnamehash}{57af579700a7f1b95505caa26ac99651}
      \strng{editornamehash}{57af579700a7f1b95505caa26ac99651}
      \strng{editorfullhash}{57af579700a7f1b95505caa26ac99651}
      \field{sortinit}{K}
      \field{sortinithash}{c02bf6bff1c488450c352b40f5d853ab}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{By carefully measuring the amount of time required to perform private key operations, attackers may be able to find fixed Diffie-Hellman exponents, factor RSA keys, and break other cryptosystems. Against a vulnerable system, the attack is computationally inexpensive and often requires only known ciphertext. Actual systems are potentially at risk, including cryptographic tokens, network-based cryptosystems, and other applications where attackers can make reasonably accurate timing measurements. Techniques for preventing the attack for RSA and Diffie-Hellman are presented. Some cryptosystems will need to be revised to protect against the attack, and new protocols and algorithms may need to incorporate measures to prevent timing attacks.}
      \field{booktitle}{Advances in {{Cryptology}} --- {{CRYPTO}} '96}
      \field{isbn}{978-3-540-68697-2}
      \field{langid}{english}
      \field{title}{Timing {{Attacks}} on {{Implementations}} of {{Diffie-Hellman}}, {{RSA}}, {{DSS}}, and {{Other Systems}}}
      \field{year}{1996}
      \field{pages}{104\bibrangedash 113}
      \range{pages}{10}
      \verb{doi}
      \verb 10.1007/3-540-68697-5_9
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/IPXVL3UF/Kocher - 1996 - Timing Attacks on Implementations of Diffie-Hellma.pdf
      \endverb
      \keyw{cryptanalysis,Diffie-Hellman,DSS,RSA,timing attack}
    \endentry
    \entry{kushnerRealStoryStuxnet2013}{article}{}
      \name{author}{1}{}{%
        {{hash=e9b331019491f5404b77e275b2f59013}{%
           family={Kushner},
           familyi={K\bibinitperiod},
           given={David},
           giveni={D\bibinitperiod}}}%
      }
      \strng{namehash}{e9b331019491f5404b77e275b2f59013}
      \strng{fullhash}{e9b331019491f5404b77e275b2f59013}
      \strng{bibnamehash}{e9b331019491f5404b77e275b2f59013}
      \strng{authorbibnamehash}{e9b331019491f5404b77e275b2f59013}
      \strng{authornamehash}{e9b331019491f5404b77e275b2f59013}
      \strng{authorfullhash}{e9b331019491f5404b77e275b2f59013}
      \field{sortinit}{K}
      \field{sortinithash}{c02bf6bff1c488450c352b40f5d853ab}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The paper discusses how Kaspersky Lab tracked down the malware that stymied Iran's nuclear-fuel enrichment program.}
      \field{issn}{1939-9340}
      \field{journaltitle}{IEEE Spectrum}
      \field{month}{3}
      \field{number}{3}
      \field{title}{The Real Story of Stuxnet}
      \field{urlday}{17}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{volume}{50}
      \field{year}{2013}
      \field{urldateera}{ce}
      \field{pages}{48\bibrangedash 53}
      \range{pages}{6}
      \verb{doi}
      \verb 10.1109/MSPEC.2013.6471059
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/YZD2ELDT/Kushner - 2013 - The real story of stuxnet.pdf
      \endverb
      \keyw{Companies,Computer hacking,Computer security,Computer viruses,Cryptography,Malware}
    \endentry
    \entry{lampsonLazySpeculativeExecution2006}{inproceedings}{}
      \name{author}{1}{}{%
        {{hash=7c223acf194680b0d21d7d024c517ac6}{%
           family={Lampson},
           familyi={L\bibinitperiod},
           given={Butler},
           giveni={B\bibinitperiod}}}%
      }
      \name{editor}{1}{}{%
        {{hash=21afce61935a19abf3a79d9942101cc3}{%
           family={Shvartsman},
           familyi={S\bibinitperiod},
           given={Mariam\bibnamedelimb Momenzadeh\bibnamedelimb Alexander\bibnamedelima A.},
           giveni={M\bibinitperiod\bibinitdelim M\bibinitperiod\bibinitdelim A\bibinitperiod\bibinitdelim A\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {Berlin, Heidelberg}%
      }
      \list{publisher}{1}{%
        {Springer}%
      }
      \strng{namehash}{7c223acf194680b0d21d7d024c517ac6}
      \strng{fullhash}{7c223acf194680b0d21d7d024c517ac6}
      \strng{bibnamehash}{7c223acf194680b0d21d7d024c517ac6}
      \strng{authorbibnamehash}{7c223acf194680b0d21d7d024c517ac6}
      \strng{authornamehash}{7c223acf194680b0d21d7d024c517ac6}
      \strng{authorfullhash}{7c223acf194680b0d21d7d024c517ac6}
      \strng{editorbibnamehash}{21afce61935a19abf3a79d9942101cc3}
      \strng{editornamehash}{21afce61935a19abf3a79d9942101cc3}
      \strng{editorfullhash}{21afce61935a19abf3a79d9942101cc3}
      \field{sortinit}{L}
      \field{sortinithash}{7c47d417cecb1f4bd38d1825c427a61a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The distinction between lazy and eager (or strict) evaluation has been studied in programming languages since Algol 60s call by name, as a way to avoid unnecessary work and to deal gracefully with infinite structures such as streams. It is deeply integrated in some languages, notably Haskell, and can be simulated in many languages by wrapping a lazy expression in a lambda.}
      \field{booktitle}{Principles of {{Distributed Systems}}}
      \field{isbn}{978-3-540-49991-6}
      \field{langid}{english}
      \field{title}{Lazy and {{Speculative Execution}} in {{Computer Systems}}}
      \field{year}{2006}
      \field{pages}{1\bibrangedash 2}
      \range{pages}{2}
      \verb{doi}
      \verb 10.1007/11945529_1
      \endverb
    \endentry
    \entry{lippMeltdown2018}{misc}{}
      \name{author}{10}{}{%
        {{hash=06dadd3dad2de585a3fce14dd5e8f779}{%
           family={Lipp},
           familyi={L\bibinitperiod},
           given={Moritz},
           giveni={M\bibinitperiod}}}%
        {{hash=463f3d270ca422b7f257c887efd3eed8}{%
           family={Schwarz},
           familyi={S\bibinitperiod},
           given={Michael},
           giveni={M\bibinitperiod}}}%
        {{hash=674bea57e03671a89cb3f84cad730696}{%
           family={Gruss},
           familyi={G\bibinitperiod},
           given={Daniel},
           giveni={D\bibinitperiod}}}%
        {{hash=b38d2f646061589c79aab7b15fec7827}{%
           family={Prescher},
           familyi={P\bibinitperiod},
           given={Thomas},
           giveni={T\bibinitperiod}}}%
        {{hash=90745f0bee3dd32447e37472dbab6c41}{%
           family={Haas},
           familyi={H\bibinitperiod},
           given={Werner},
           giveni={W\bibinitperiod}}}%
        {{hash=1cdffbc482347edefd718f61814abbc3}{%
           family={Mangard},
           familyi={M\bibinitperiod},
           given={Stefan},
           giveni={S\bibinitperiod}}}%
        {{hash=f0a163cdbf4dbde1c36f8457b3e2278e}{%
           family={Kocher},
           familyi={K\bibinitperiod},
           given={Paul},
           giveni={P\bibinitperiod}}}%
        {{hash=9b8ddec78ab1bf52f758858ca3928a61}{%
           family={Genkin},
           familyi={G\bibinitperiod},
           given={Daniel},
           giveni={D\bibinitperiod}}}%
        {{hash=cd7579fd1f745b58396f5395d38e1a5c}{%
           family={Yarom},
           familyi={Y\bibinitperiod},
           given={Yuval},
           giveni={Y\bibinitperiod}}}%
        {{hash=d9528fb2869236a3c4d978220eded42c}{%
           family={Hamburg},
           familyi={H\bibinitperiod},
           given={Mike},
           giveni={M\bibinitperiod}}}%
      }
      \strng{namehash}{c5e126d74b4feabda41a322ec7554974}
      \strng{fullhash}{51cf67ef48aa1afbac4cb2799063a03e}
      \strng{bibnamehash}{c5e126d74b4feabda41a322ec7554974}
      \strng{authorbibnamehash}{c5e126d74b4feabda41a322ec7554974}
      \strng{authornamehash}{c5e126d74b4feabda41a322ec7554974}
      \strng{authorfullhash}{51cf67ef48aa1afbac4cb2799063a03e}
      \field{sortinit}{L}
      \field{sortinithash}{7c47d417cecb1f4bd38d1825c427a61a}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The security of computer systems fundamentally relies on memory isolation, e.g., kernel address ranges are marked as non-accessible and are protected from user access. In this paper, we present Meltdown. Meltdown exploits side effects of out-of-order execution on modern processors to read arbitrary kernel-memory locations including personal data and passwords. Out-of-order execution is an indispensable performance feature and present in a wide range of modern processors. The attack works on different Intel microarchitectures since at least 2010 and potentially other processors are affected. The root cause of Meltdown is the hardware. The attack is independent of the operating system, and it does not rely on any software vulnerabilities. Meltdown breaks all security assumptions given by address space isolation as well as paravirtualized environments and, thus, every security mechanism building upon this foundation. On affected systems, Meltdown enables an adversary to read memory of other processes or virtual machines in the cloud without any permissions or privileges, affecting millions of customers and virtually every user of a personal computer. We show that the KAISER defense mechanism for KASLR has the important (but inadvertent) side effect of impeding Meltdown. We stress that KAISER must be deployed immediately to prevent large-scale exploitation of this severe information leakage.}
      \field{howpublished}{https://arxiv.org/abs/1801.01207v1}
      \field{journaltitle}{arXiv.org}
      \field{langid}{english}
      \field{month}{1}
      \field{title}{Meltdown}
      \field{urlday}{7}
      \field{urlmonth}{3}
      \field{urlyear}{2024}
      \field{year}{2018}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/4235IMHY/Lipp et al. - 2018 - Meltdown.pdf
      \endverb
    \endentry
    \entry{maitiLargeScaleCharacterization2010}{inproceedings}{}
      \name{author}{4}{}{%
        {{hash=27427e6ac8aff1faabc4b4b8d88a8abd}{%
           family={Maiti},
           familyi={M\bibinitperiod},
           given={Abhranil},
           giveni={A\bibinitperiod}}}%
        {{hash=4843ca8796746defb1eb9c70210dd399}{%
           family={Casarona},
           familyi={C\bibinitperiod},
           given={Jeff},
           giveni={J\bibinitperiod}}}%
        {{hash=b049ec381bb92075a0f7d256b27a496d}{%
           family={McHale},
           familyi={M\bibinitperiod},
           given={Luke},
           giveni={L\bibinitperiod}}}%
        {{hash=2f66c4523408992f7e78ed07e0f89c12}{%
           family={Schaumont},
           familyi={S\bibinitperiod},
           given={Patrick},
           giveni={P\bibinitperiod}}}%
      }
      \strng{namehash}{51f47b163df9a6d0d6bdf28c5c1243c8}
      \strng{fullhash}{4e8362821e01711190891c79ef6622a3}
      \strng{bibnamehash}{51f47b163df9a6d0d6bdf28c5c1243c8}
      \strng{authorbibnamehash}{51f47b163df9a6d0d6bdf28c5c1243c8}
      \strng{authornamehash}{51f47b163df9a6d0d6bdf28c5c1243c8}
      \strng{authorfullhash}{4e8362821e01711190891c79ef6622a3}
      \field{sortinit}{M}
      \field{sortinithash}{4625c616857f13d17ce56f7d4f97d451}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{To validate the effectiveness of a Physical Unclonable Function (PUF), it needs to be characterized over a large population of chips. Though simulation methods can provide approximate results, an on-chip experiment produces more accurate result. In this paper, we characterize a PUF based on ring oscillator (RO) using a significantly large population of 125 FPGAs. We analyze the experimental data using a ring oscillator loop delay model, and quantify the quality factors of a PUF such as uniqueness and reliability. The RO-PUF shows an average inter-die Hamming distance of 47.31\%, and an average intra-die Hamming distance of 0.86\% at normal operating condition. Additionally, we intend to make this large RO frequency dataset available publicly for the research community.}
      \field{booktitle}{2010 {{IEEE International Symposium}} on {{Hardware-Oriented Security}} and {{Trust}} ({{HOST}})}
      \field{month}{6}
      \field{title}{A Large Scale Characterization of {{RO-PUF}}}
      \field{urlday}{10}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2010}
      \field{urldateera}{ce}
      \field{pages}{94\bibrangedash 99}
      \range{pages}{6}
      \verb{doi}
      \verb 10.1109/HST.2010.5513108
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/W5ZM3Y73/Maiti et al. - 2010 - A large scale characterization of RO-PUF.pdf;/home/hectellian/Zotero/storage/ERVWUNM5/5513108.html
      \endverb
      \keyw{Authentication,Circuits,Data analysis,Delay,Field programmable gate arrays,Frequency,Hamming distance,Large-scale systems,Ring oscillators,Semiconductor device measurement}
    \endentry
    \entry{MeltdownSecurityVulnerability2024}{article}{}
      \field{sortinit}{M}
      \field{sortinithash}{4625c616857f13d17ce56f7d4f97d451}
      \field{labeltitlesource}{title}
      \field{abstract}{Meltdown is one of the two original transient execution CPU vulnerabilities (the other being Spectre). Meltdown affects Intel x86 microprocessors, IBM POWER processors, and some ARM-based microprocessors. It allows a rogue process to read all memory, even when it is not authorized to do so. Meltdown affects a wide range of systems. At the time of disclosure (2018), this included all devices running any but the most recent and patched versions of iOS, Linux, macOS, or Windows. Accordingly, many servers and cloud services were impacted, as well as a potential majority of smart devices and embedded devices using ARM-based processors (mobile devices, smart TVs, printers and others), including a wide range of networking equipment. A purely software workaround to Meltdown has been assessed as slowing computers between 5 and 30 percent in certain specialized workloads, although companies responsible for software correction of the exploit reported minimal impact from general benchmark testing.Meltdown was issued a Common Vulnerabilities and Exposures ID of CVE-2017-5754, also known as Rogue Data Cache Load (RDCL), in January 2018. It was disclosed in conjunction with another exploit, Spectre, with which it shares some characteristics. The Meltdown and Spectre vulnerabilities are considered "catastrophic" by security analysts. The vulnerabilities are so severe that security researchers initially believed the reports to be false.Several procedures to help protect home computers and related devices from the Meltdown and Spectre security vulnerabilities have been published. Meltdown patches may produce performance loss. Spectre patches have been reported to significantly reduce performance, especially on older computers; on the then-newest (2017) eighth-generation Core platforms, benchmark performance drops of 2--14 percent have been measured. On 18 January 2018, unwanted reboots, even for newer Intel chips, due to Meltdown and Spectre patches, were reported. Nonetheless, according to Dell: "No 'real-world' exploits of these vulnerabilities [i.e., Meltdown and Spectre] have been reported to date [26 January 2018], though researchers have produced proof-of-concepts." Dell further recommended: "promptly adopting software updates, avoiding unrecognized hyperlinks and websites, not downloading files or applications from unknown sources ... following secure password protocols ... [using] security software to help protect against malware (advanced threat prevention software or anti-virus)."On 15 March 2018, Intel reported that it would redesign its CPUs to help protect against the Meltdown and related Spectre vulnerabilities (especially, Meltdown and Spectre-V2, but not Spectre-V1), and expected to release the newly redesigned processors later in 2018. On 8 October 2018, Intel is reported to have added hardware and firmware mitigations regarding Spectre and Meltdown vulnerabilities to its latest processors.}
      \field{annotation}{Page Version ID: 1215853086}
      \field{journaltitle}{Wikipedia}
      \field{langid}{english}
      \field{month}{3}
      \field{title}{Meltdown (Security Vulnerability)}
      \field{urlday}{15}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2024}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/4F6SUYTS/Meltdown_(security_vulnerability).html
      \endverb
    \endentry
    \entry{mofradComparisonStudyIntel2018}{inproceedings}{}
      \name{author}{4}{}{%
        {{hash=9f323a7ba80c9828460111f014a039d4}{%
           family={Mofrad},
           familyi={M\bibinitperiod},
           given={Saeid},
           giveni={S\bibinitperiod}}}%
        {{hash=058a9b1ef3c4145911e8c324ccd7cf44}{%
           family={Zhang},
           familyi={Z\bibinitperiod},
           given={Fengwei},
           giveni={F\bibinitperiod}}}%
        {{hash=4a09eff83f8f4f95b3cbb262df99388d}{%
           family={Lu},
           familyi={L\bibinitperiod},
           given={Shiyong},
           giveni={S\bibinitperiod}}}%
        {{hash=81d3a3f8e7369726b66fcfeed4589af1}{%
           family={Shi},
           familyi={S\bibinitperiod},
           given={Weidong},
           giveni={W\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {Los Angeles California}%
      }
      \list{publisher}{1}{%
        {ACM}%
      }
      \strng{namehash}{79548e75c037b4e786746dbbab9772d1}
      \strng{fullhash}{d7c0f03fb07754f5be39a75e362a806d}
      \strng{bibnamehash}{79548e75c037b4e786746dbbab9772d1}
      \strng{authorbibnamehash}{79548e75c037b4e786746dbbab9772d1}
      \strng{authornamehash}{79548e75c037b4e786746dbbab9772d1}
      \strng{authorfullhash}{d7c0f03fb07754f5be39a75e362a806d}
      \field{sortinit}{M}
      \field{sortinithash}{4625c616857f13d17ce56f7d4f97d451}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{booktitle}{Proceedings of the 7th {{International Workshop}} on {{Hardware}} and {{Architectural Support}} for {{Security}} and {{Privacy}}}
      \field{isbn}{978-1-4503-6500-0}
      \field{langid}{english}
      \field{month}{6}
      \field{title}{A Comparison Study of Intel {{SGX}} and {{AMD}} Memory Encryption Technology}
      \field{urlday}{15}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2018}
      \field{urldateera}{ce}
      \field{pages}{1\bibrangedash 8}
      \range{pages}{8}
      \verb{doi}
      \verb 10.1145/3214292.3214301
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/WRWVS8WQ/Mofrad et al. - 2018 - A comparison study of intel SGX and AMD memory enc.pdf
      \endverb
    \endentry
    \entry{moradiVulnerabilityFPGABitstream2011}{inproceedings}{}
      \name{author}{4}{}{%
        {{hash=ecb99179163100c0796947c8691258ca}{%
           family={Moradi},
           familyi={M\bibinitperiod},
           given={Amir},
           giveni={A\bibinitperiod}}}%
        {{hash=adbd345822efc044f889f7562624c730}{%
           family={Barenghi},
           familyi={B\bibinitperiod},
           given={Alessandro},
           giveni={A\bibinitperiod}}}%
        {{hash=2c7ba769a2e0467d9203a9c7e147e743}{%
           family={Kasper},
           familyi={K\bibinitperiod},
           given={Timo},
           giveni={T\bibinitperiod}}}%
        {{hash=cee721c72e08c7c6c3c6a06458a36b9f}{%
           family={Paar},
           familyi={P\bibinitperiod},
           given={Christof},
           giveni={C\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {New York, NY, USA}%
      }
      \list{publisher}{1}{%
        {Association for Computing Machinery}%
      }
      \strng{namehash}{8e791c122c528020a9850c51bb2c1dfe}
      \strng{fullhash}{bcbb25a5326f1a38a4af7d495dd3d7a5}
      \strng{bibnamehash}{8e791c122c528020a9850c51bb2c1dfe}
      \strng{authorbibnamehash}{8e791c122c528020a9850c51bb2c1dfe}
      \strng{authornamehash}{8e791c122c528020a9850c51bb2c1dfe}
      \strng{authorfullhash}{bcbb25a5326f1a38a4af7d495dd3d7a5}
      \field{sortinit}{M}
      \field{sortinithash}{4625c616857f13d17ce56f7d4f97d451}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{shorttitle}
      \field{abstract}{Over the last two decades FPGAs have become central components for many advanced digital systems, e.g., video signal processing, network routers, data acquisition and military systems. In order to protect the intellectual property and to prevent fraud, e.g., by cloning a design embedded into an FPGA or manipulating its content, many current FPGAs employ a bitstream encryption feature. We develop a successful attack on the bitstream encryption engine integrated in the widespread Virtex-II Pro FPGAs from Xilinx, using side-channel analysis. After measuring the power consumption of a single power-up of the device and a modest amount of off-line computation, we are able to recover all three different keys used by its triple DES module. Our method allows extracting secret keys from any real-world device where the bitstream encryption feature of Virtex-II Pro is enabled. As a consequence, the target product can be cloned and manipulated at the will of the attacker since no side-channel protection was included into the design of the decryption module. Also, more advanced attacks such as reverse engineering or the introduction of hardware Trojans become potential threats. While performing the side-channel attack, we were able to deduce a hypothetical architecture of the hardware encryption engine. To our knowledge, this is the first attack against the bitstream encryption of a commercial FPGA reported in the open literature.}
      \field{booktitle}{Proceedings of the 18th {{ACM}} Conference on {{Computer}} and Communications Security}
      \field{isbn}{978-1-4503-0948-6}
      \field{month}{10}
      \field{series}{{{CCS}} '11}
      \field{shorttitle}{On the Vulnerability of {{FPGA}} Bitstream Encryption against Power Analysis Attacks}
      \field{title}{On the Vulnerability of {{FPGA}} Bitstream Encryption against Power Analysis Attacks: Extracting Keys from Xilinx {{Virtex-II FPGAs}}}
      \field{urlday}{10}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2011}
      \field{urldateera}{ce}
      \field{pages}{111\bibrangedash 124}
      \range{pages}{14}
      \verb{doi}
      \verb 10.1145/2046707.2046722
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/TQFHQABS/Moradi et al. - 2011 - On the vulnerability of FPGA bitstream encryption .pdf
      \endverb
      \keyw{bitstream encryption,FPGA,side-channel attacks,triple des}
    \endentry
    \entry{ngabonzizaTrustZoneExplainedArchitectural2016}{inproceedings}{}
      \name{author}{5}{}{%
        {{hash=342c1c8589c463c5b11ee24c5b792bc7}{%
           family={Ngabonziza},
           familyi={N\bibinitperiod},
           given={Bernard},
           giveni={B\bibinitperiod}}}%
        {{hash=32aa716a830496e546876cf7f52e4012}{%
           family={Martin},
           familyi={M\bibinitperiod},
           given={Daniel},
           giveni={D\bibinitperiod}}}%
        {{hash=1cc5dea2058d6d9004a1ccec24e0387c}{%
           family={Bailey},
           familyi={B\bibinitperiod},
           given={Anna},
           giveni={A\bibinitperiod}}}%
        {{hash=768ec6cdcea772299318874bc6d6715a}{%
           family={Cho},
           familyi={C\bibinitperiod},
           given={Haehyun},
           giveni={H\bibinitperiod}}}%
        {{hash=2794292eb779369631b6b0c603b24531}{%
           family={Martin},
           familyi={M\bibinitperiod},
           given={Sarah},
           giveni={S\bibinitperiod}}}%
      }
      \strng{namehash}{061322a143a4f7b79c5365b1053d6191}
      \strng{fullhash}{ac63acd67d0bb2a2489e0930d02ebb78}
      \strng{bibnamehash}{061322a143a4f7b79c5365b1053d6191}
      \strng{authorbibnamehash}{061322a143a4f7b79c5365b1053d6191}
      \strng{authornamehash}{061322a143a4f7b79c5365b1053d6191}
      \strng{authorfullhash}{ac63acd67d0bb2a2489e0930d02ebb78}
      \field{sortinit}{N}
      \field{sortinithash}{22369a73d5f88983a108b63f07f37084}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{shorttitle}
      \field{abstract}{ARM TrustZone is a hardware security extension technology, which aims to provide secure execution environment by splitting computer resources between two execution worlds, namely normal world and secure world. TrustZone is supported on different flavors of ARM architectures, that include architecture deployed on targets running regular applications, such as mobile devices and architecture for micro-controllers. As ARM is widely deployed on the majority of mobile and micro-controller devices, TrustZone's goal is to provide security for those platforms. In this paper, we will discuss details of different ARM architectures that support TrustZone technology. Then, we will review how TrustZone is implemented in the hardware and software of ARM products. We will also compare TrustZone with other implementations of trusted execution environments on the market.}
      \field{booktitle}{2016 {{IEEE}} 2nd {{International Conference}} on {{Collaboration}} and {{Internet Computing}} ({{CIC}})}
      \field{month}{11}
      \field{shorttitle}{{{TrustZone Explained}}}
      \field{title}{{{TrustZone Explained}}: {{Architectural Features}} and {{Use Cases}}}
      \field{urlday}{17}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2016}
      \field{urldateera}{ce}
      \field{pages}{445\bibrangedash 451}
      \range{pages}{7}
      \verb{doi}
      \verb 10.1109/CIC.2016.065
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/S7HKMGMT/Ngabonziza et al. - 2016 - TrustZone Explained Architectural Features and Us.pdf;/home/hectellian/Zotero/storage/244D3E73/7809736.html
      \endverb
      \keyw{Computer architecture,Coprocessors,Hardware,Monitoring,Registers,Security,Software}
    \endentry
    \entry{nicolasfalliereW32StuxnetDossier}{book}{}
      \name{author}{1}{}{%
        {{hash=fa1bbd44f5194900fb5b492ece942192}{%
           family={Nicolas\bibnamedelima Falliere},
           familyi={N\bibinitperiod\bibinitdelim F\bibinitperiod},
           given={Liam\bibnamedelimb O.\bibnamedelimi Murchu},
           giveni={L\bibinitperiod\bibinitdelim O\bibinitperiod\bibinitdelim M\bibinitperiod}}}%
      }
      \strng{namehash}{fa1bbd44f5194900fb5b492ece942192}
      \strng{fullhash}{fa1bbd44f5194900fb5b492ece942192}
      \strng{bibnamehash}{fa1bbd44f5194900fb5b492ece942192}
      \strng{authorbibnamehash}{fa1bbd44f5194900fb5b492ece942192}
      \strng{authornamehash}{fa1bbd44f5194900fb5b492ece942192}
      \strng{authorfullhash}{fa1bbd44f5194900fb5b492ece942192}
      \field{sortinit}{N}
      \field{sortinithash}{22369a73d5f88983a108b63f07f37084}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{W32.Stuxnet has gained a lot of attention from researchers and me- dia recently. There is good reason for this. Stuxnet is one of the most complex threats we have analyzed. In this paper we take a de- tailed look at Stuxnet and its various components and particularly focus on the final goal of Stuxnet, which is to reprogram industrial control systems. Stuxnet is a large, complex piece of malware with many different components and functionalities.}
      \field{langid}{english}
      \field{title}{W32 {{Stuxnet Dossier}}}
      \field{urlday}{17}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{urldateera}{ce}
      \keyw{stuxnet}
    \endentry
    \entry{orlandUnpatchableExploitThat2018}{misc}{}
      \name{author}{1}{}{%
        {{hash=d1b1d39145c1427dc1aa52431c349877}{%
           family={Orland},
           familyi={O\bibinitperiod},
           given={Kyle},
           giveni={K\bibinitperiod}}}%
      }
      \strng{namehash}{d1b1d39145c1427dc1aa52431c349877}
      \strng{fullhash}{d1b1d39145c1427dc1aa52431c349877}
      \strng{bibnamehash}{d1b1d39145c1427dc1aa52431c349877}
      \strng{authorbibnamehash}{d1b1d39145c1427dc1aa52431c349877}
      \strng{authornamehash}{d1b1d39145c1427dc1aa52431c349877}
      \strng{authorfullhash}{d1b1d39145c1427dc1aa52431c349877}
      \field{sortinit}{O}
      \field{sortinithash}{2cd7140a07aea5341f9e2771efe90aae}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Newly published Tegra bootROM exploit could be a big headache for Nintendo and others.}
      \field{howpublished}{https://arstechnica.com/gaming/2018/04/the-unpatchable-exploit-that-makes-every-current-nintendo-switch-hackable/}
      \field{journaltitle}{Ars Technica}
      \field{langid}{american}
      \field{month}{4}
      \field{title}{The ``Unpatchable'' Exploit That Makes Every Current {{Nintendo Switch}} Hackable [{{Updated}}]}
      \field{urlday}{7}
      \field{urlmonth}{3}
      \field{urlyear}{2024}
      \field{year}{2018}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/RDT8WQ6L/the-unpatchable-exploit-that-makes-every-current-nintendo-switch-hackable.html
      \endverb
    \endentry
    \entry{RadiationHardening2024}{article}{}
      \field{sortinit}{R}
      \field{sortinithash}{5e1c39a9d46ffb6bebd8f801023a9486}
      \field{labeltitlesource}{title}
      \field{abstract}{Radiation hardening is the process of making electronic components and circuits resistant to damage or malfunction caused by high levels of ionizing radiation (particle radiation and high-energy electromagnetic radiation), especially for environments in outer space (especially beyond the low Earth orbit), around nuclear reactors and particle accelerators, or during nuclear accidents or nuclear warfare. Most semiconductor electronic components are susceptible to radiation damage, and radiation-hardened (rad-hard) components are based on their non-hardened equivalents, with some design and manufacturing variations that reduce the susceptibility to radiation damage. Due to the extensive development and testing required to produce a radiation-tolerant design of a microelectronic chip, the technology of radiation-hardened chips tends to lag behind the most recent developments. Radiation-hardened products are typically tested to one or more resultant-effects tests, including total ionizing dose (TID), enhanced low dose rate effects (ELDRS), neutron and proton displacement damage, and single event effects (SEEs).}
      \field{annotation}{Page Version ID: 1205501084}
      \field{journaltitle}{Wikipedia}
      \field{langid}{english}
      \field{month}{2}
      \field{title}{Radiation Hardening}
      \field{urlday}{15}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2024}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/GGUFE8VY/Radiation_hardening.html
      \endverb
    \endentry
    \entry{raghavanDynamicSchemesSpeculative1998}{inproceedings}{}
      \name{author}{3}{}{%
        {{hash=c722ec4eb501337b12785307557e9dcd}{%
           family={Raghavan},
           familyi={R\bibinitperiod},
           given={P.},
           giveni={P\bibinitperiod}}}%
        {{hash=d0e074523e4639a1d8c39d84ef3c8add}{%
           family={Shachnai},
           familyi={S\bibinitperiod},
           given={H.},
           giveni={H\bibinitperiod}}}%
        {{hash=a1feaf26c50e6f5777bae9fbb0cbc7d6}{%
           family={Yaniv},
           familyi={Y\bibinitperiod},
           given={M.},
           giveni={M\bibinitperiod}}}%
      }
      \strng{namehash}{b44940a8bf038fcaeec37dae189525e0}
      \strng{fullhash}{b44940a8bf038fcaeec37dae189525e0}
      \strng{bibnamehash}{b44940a8bf038fcaeec37dae189525e0}
      \strng{authorbibnamehash}{b44940a8bf038fcaeec37dae189525e0}
      \strng{authornamehash}{b44940a8bf038fcaeec37dae189525e0}
      \strng{authorfullhash}{b44940a8bf038fcaeec37dae189525e0}
      \field{sortinit}{R}
      \field{sortinithash}{5e1c39a9d46ffb6bebd8f801023a9486}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Speculative execution of code is becoming a key technique for enhancing the performance of pipeline processors. We study schemes that predict the execution path of a program based on the history of branch executions. Building on previous work, we present a model for analyzing the effective speedup from pipelining using various schemes for speculative execution. We follow this with stochastic analyses of various speculative execution schemes. Finally, we conclude with simulations covering several of the settings we study.}
      \field{booktitle}{Proceedings. {{Sixth International Symposium}} on {{Modeling}}, {{Analysis}} and {{Simulation}} of {{Computer}} and {{Telecommunication Systems}} ({{Cat}}. {{No}}.{{98TB100247}})}
      \field{month}{7}
      \field{title}{Dynamic Schemes for Speculative Execution of Code}
      \field{urlday}{17}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{1998}
      \field{urldateera}{ce}
      \field{pages}{309\bibrangedash 314}
      \range{pages}{6}
      \verb{doi}
      \verb 10.1109/MASCOT.1998.693711
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/969QBSSV/Raghavan et al. - 1998 - Dynamic schemes for speculative execution of code.pdf
      \endverb
      \keyw{Algorithm design and analysis,Computer interfaces,Hardware,Microprocessors,Optimized production technology,Pipelines,Radio access networks,Runtime,Throughput}
    \endentry
    \entry{RowHammer2024}{article}{}
      \field{sortinit}{R}
      \field{sortinithash}{5e1c39a9d46ffb6bebd8f801023a9486}
      \field{labeltitlesource}{title}
      \field{abstract}{Row hammer (also written as rowhammer) is a computer security exploit that takes advantage of an unintended and undesirable side effect in dynamic random-access memory (DRAM) in which memory cells interact electrically between themselves by leaking their charges, possibly changing the contents of nearby memory rows that were not addressed in the original memory access. This circumvention of the isolation between DRAM memory cells results from the high cell density in modern DRAM, and can be triggered by specially crafted memory access patterns that rapidly activate the same memory rows numerous times.The row hammer effect has been used in some privilege escalation computer security exploits, and network-based attacks are also theoretically possible.Different hardware-based techniques exist to prevent the row hammer effect from occurring, including required support in some processors and types of DRAM memory modules.}
      \field{annotation}{Page Version ID: 1216563701}
      \field{journaltitle}{Wikipedia}
      \field{langid}{english}
      \field{month}{3}
      \field{title}{Row Hammer}
      \field{urlday}{17}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2024}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/2SFRZD2W/Row_hammer.html
      \endverb
    \endentry
    \entry{SpectreSecurityVulnerability2024}{article}{}
      \field{sortinit}{S}
      \field{sortinithash}{b164b07b29984b41daf1e85279fbc5ab}
      \field{labeltitlesource}{title}
      \field{abstract}{Spectre is one of the two original transient execution CPU vulnerabilities (the other being Meltdown), which involve microarchitectural timing side-channel attacks. These affect modern microprocessors that perform branch prediction and other forms of speculation. On most processors, the speculative execution resulting from a branch misprediction may leave observable side effects that may reveal private data to attackers. For example, if the pattern of memory accesses performed by such speculative execution depends on private data, the resulting state of the data cache constitutes a side channel through which an attacker may be able to extract information about the private data using a timing attack.Two Common Vulnerabilities and Exposures IDs related to Spectre, CVE-2017-5753 (bounds check bypass, Spectre-V1, Spectre 1.0) and CVE-2017-5715 (branch target injection, Spectre-V2), have been issued. JIT engines used for JavaScript were found to be vulnerable. A website can read data stored in the browser for another website, or the browser's memory itself.In early 2018, Intel reported that it would redesign its CPUs to help protect against the Spectre and related Meltdown vulnerabilities (especially, Spectre variant 2 and Meltdown, but not Spectre variant 1). On 8 October 2018, Intel was reported to have added hardware and firmware mitigations regarding Spectre and Meltdown vulnerabilities to its latest processors.}
      \field{annotation}{Page Version ID: 1218972533}
      \field{journaltitle}{Wikipedia}
      \field{langid}{english}
      \field{month}{4}
      \field{title}{Spectre (Security Vulnerability)}
      \field{urlday}{15}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2024}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/3C5FJPXS/Spectre_(security_vulnerability).html
      \endverb
    \endentry
    \entry{tajikPhysicalCharacterizationArbiter2014}{inproceedings}{}
      \name{author}{8}{}{%
        {{hash=5eb4f1812ef971474f0bfd9a96b805b8}{%
           family={Tajik},
           familyi={T\bibinitperiod},
           given={Shahin},
           giveni={S\bibinitperiod}}}%
        {{hash=6f1f74102c71b882942b9b66bc708bcf}{%
           family={Dietz},
           familyi={D\bibinitperiod},
           given={Enrico},
           giveni={E\bibinitperiod}}}%
        {{hash=75a08dbf77c1d425d42703ff63315416}{%
           family={Frohmann},
           familyi={F\bibinitperiod},
           given={Sven},
           giveni={S\bibinitperiod}}}%
        {{hash=ed83c5ceed1edd0dbc3cc610adf79477}{%
           family={Seifert},
           familyi={S\bibinitperiod},
           given={Jean-Pierre},
           giveni={J\bibinithyphendelim P\bibinitperiod}}}%
        {{hash=dbc22bafd4c3880d5f24c38175c8a77e}{%
           family={Nedospasov},
           familyi={N\bibinitperiod},
           given={Dmitry},
           giveni={D\bibinitperiod}}}%
        {{hash=29714a2628234d2970d015c525dbfaef}{%
           family={Helfmeier},
           familyi={H\bibinitperiod},
           given={Clemens},
           giveni={C\bibinitperiod}}}%
        {{hash=9e2703551ccef662676887cbd8183942}{%
           family={Boit},
           familyi={B\bibinitperiod},
           given={Christian},
           giveni={C\bibinitperiod}}}%
        {{hash=70c60f31ab0a0daf2f1e12f6a5cbddaf}{%
           family={Dittrich},
           familyi={D\bibinitperiod},
           given={Helmar},
           giveni={H\bibinitperiod}}}%
      }
      \name{editor}{2}{}{%
        {{hash=4819c7435b5fdc12cb7e9972b8f7400e}{%
           family={Batina},
           familyi={B\bibinitperiod},
           given={Lejla},
           giveni={L\bibinitperiod}}}%
        {{hash=2a8de054790ca19f1bab83c4230f17e6}{%
           family={Robshaw},
           familyi={R\bibinitperiod},
           given={Matthew},
           giveni={M\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {Berlin, Heidelberg}%
      }
      \list{publisher}{1}{%
        {Springer}%
      }
      \strng{namehash}{d6162351c25d6eb2c2edc3304d55d931}
      \strng{fullhash}{16bce79bb01b1fcb38edb337cb59affc}
      \strng{bibnamehash}{d6162351c25d6eb2c2edc3304d55d931}
      \strng{authorbibnamehash}{d6162351c25d6eb2c2edc3304d55d931}
      \strng{authornamehash}{d6162351c25d6eb2c2edc3304d55d931}
      \strng{authorfullhash}{16bce79bb01b1fcb38edb337cb59affc}
      \strng{editorbibnamehash}{786126ef977a0a87b13afdde2b21d3dd}
      \strng{editornamehash}{786126ef977a0a87b13afdde2b21d3dd}
      \strng{editorfullhash}{786126ef977a0a87b13afdde2b21d3dd}
      \field{sortinit}{T}
      \field{sortinithash}{9af77f0292593c26bde9a56e688eaee9}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{As intended by its name, Physically Unclonable Functions (PUFs) are considered as an ultimate solution to deal with insecure storage, hardware counterfeiting, and many other security problems. However, many different successful attacks have already revealed vulnerabilities of certain digital intrinsic PUFs. Although settling-state-based PUFs, such as SRAM PUFs, can be physically cloned by semi-invasive and fully-invasive attacks, successful attacks on timing-based PUFs were so far limited to modeling attacks. Such modeling requires a large subset of challenge-response-pairs (CRP) to successfully model the targeted PUF. In order to provide a final security answer, this paper proves that all arbiter-based (i.e. controlled and XOR-enhanced) PUFs can be completely and linearly characterized by means of photonic emission analysis. Our experimental setup is capable of measuring every PUF-internal delay with a resolution of 6 picoseconds. Due to this resolution we indeed require only the theoretical minimum number of linear independent equations (i.e. physical measurements) to directly solve the underlying inhomogeneous linear system. Moreover, we neither require to know the actual PUF challenges nor the corresponding PUF responses for our physical delay extraction. On top of that devastating result, we are also able to further simplify our setup for easier physical measurement handling. We present our practical results for a real arbiter PUF implementation on a Complex Programmable Logic Device (CPLD) from Altera manufactured in a 180 nanometer process.}
      \field{booktitle}{Cryptographic {{Hardware}} and {{Embedded Systems}} -- {{CHES}} 2014}
      \field{isbn}{978-3-662-44709-3}
      \field{langid}{english}
      \field{title}{Physical {{Characterization}} of {{Arbiter PUFs}}}
      \field{year}{2014}
      \field{pages}{493\bibrangedash 509}
      \range{pages}{17}
      \verb{doi}
      \verb 10.1007/978-3-662-44709-3_27
      \endverb
      \verb{file}
      \verb /home/hectellian/Zotero/storage/JFZIHHNR/Tajik et al. - 2014 - Physical Characterization of Arbiter PUFs.pdf
      \endverb
      \keyw{Arbiter PUF,backside,photonic emission analysis,physical characterization}
    \endentry
    \entry{vinaypamnani-msftWindowsDefenderApplication2024}{misc}{}
      \name{author}{1}{}{%
        {{hash=2b65dd695e4276baf400373906be5ae7}{%
           family={{vinaypamnani-msft}},
           familyi={v\bibinitperiod}}}%
      }
      \strng{namehash}{2b65dd695e4276baf400373906be5ae7}
      \strng{fullhash}{2b65dd695e4276baf400373906be5ae7}
      \strng{bibnamehash}{2b65dd695e4276baf400373906be5ae7}
      \strng{authorbibnamehash}{2b65dd695e4276baf400373906be5ae7}
      \strng{authornamehash}{2b65dd695e4276baf400373906be5ae7}
      \strng{authorfullhash}{2b65dd695e4276baf400373906be5ae7}
      \field{sortinit}{v}
      \field{sortinithash}{afb52128e5b4dc4b843768c0113d673b}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Hardware and software system integrity-hardening capabilities that can be deployed separately or in combination with Windows Defender Application Control (WDAC).}
      \field{howpublished}{https://learn.microsoft.com/en-us/windows/security/application-security/application-control/introduction-to-device-guard-virtualization-based-security-and-windows-defender-application-control}
      \field{langid}{american}
      \field{month}{3}
      \field{title}{Windows {{Defender Application Control}} and Virtualization-Based Code Integrity - {{Windows Security}}}
      \field{urlday}{10}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2024}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/J8LKWSIW/introduction-to-device-guard-virtualization-based-security-and-windows-defender-application-con.html
      \endverb
    \endentry
    \entry{WhatFirmware2013}{misc}{}
      \field{sortinit}{W}
      \field{sortinithash}{4315d78024d0cea9b57a0c6f0e35ed0d}
      \field{labeltitlesource}{title}
      \field{abstract}{Firmware is the basic software embedded in a hardware device. Firmware - essential software routines contained in~ROM~memory ~of a hardware device. Firmware is always responsible for basic operations, such as starting or input / output. We can say, without fail, that any electronic device~ needs~firmware to operate. Firmware range from a reduced set of instructions{\dots}}
      \field{chapter}{EN}
      \field{journaltitle}{incepator.pinzaru.ro}
      \field{langid}{en, sv}
      \field{month}{1}
      \field{title}{{What is firmware?}}
      \field{urlday}{17}
      \field{urlmonth}{4}
      \field{urlyear}{2024}
      \field{year}{2013}
      \field{urldateera}{ce}
      \verb{file}
      \verb /home/hectellian/Zotero/storage/RJK79ZFB/what-is-firmware.html
      \endverb
    \endentry
  \enddatalist
\endrefsection
\endinput

